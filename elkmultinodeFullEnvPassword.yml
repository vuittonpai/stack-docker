version: '3.6'

services:
  elasticsearch:
    image: elasticsearch:${TAG}
    container_name: elasticsearch
    secrets:
      - source: ca.crt
        target: /usr/share/elasticsearch/config/certs/ca/ca.crt
      - source: elasticsearch.keystore
        target: /usr/share/elasticsearch/config/elasticsearch.keystore
      - source: elasticsearch.key
        target: /usr/share/elasticsearch/config/certs/elasticsearch/elasticsearch.key
      - source: elasticsearch.crt
        target: /usr/share/elasticsearch/config/certs/elasticsearch/elasticsearch.crt
    environment:
      cluster.name: 'elastic-cluster'
      node.name: 'elasticsearch'
      node.master: 'true'
      node.data: 'true'
      #node.ingest: 'false'
      bootstrap.memory_lock: 'true'
      xpack.license.self_generated.type: 'trial'
      # #Discovery
      discovery.zen.ping.unicast.hosts: 'es02, es03'
      discovery.zen.ping_timeout: '30s'
      discovery.zen.minimum_master_nodes: '1'
      gateway.recover_after_data_nodes: '1'
      thread_pool.bulk.queue_size: '3000'
      indices.breaker.request.limit: '10%'
      search.default_search_timeout: '30s'
      indices.fielddata.cache.size:  '30%'

      ES_JAVA_OPTS: '-Xms512m -Xmx512m'
      xpack.security.enabled: 'true'
      xpack.monitoring.enabled: 'true'
      xpack.graph.enabled: 'true'
      xpack.watcher.enabled: 'true'
      xpack.monitoring.collection.enabled: 'false'
      #password set up
      network.host: '0.0.0.0'
      transport.host: '0.0.0.0'
      #xpack.security.enabled: 'true'
      xpack.security.http.ssl.enabled: 'true'
      xpack.security.http.ssl.verification_mode: 'certificate'
      xpack.security.http.ssl.key:  'certs/elasticsearch/elasticsearch.key'
      xpack.security.http.ssl.certificate: 'certs/elasticsearch/elasticsearch.crt'
      xpack.security.http.ssl.certificate_authorities: 'certs/ca/ca.crt'

      xpack.security.transport.ssl.enabled: 'true'
      xpack.security.transport.ssl.key:  'certs/elasticsearch/elasticsearch.key'
      xpack.security.transport.ssl.certificate: 'certs/elasticsearch/elasticsearch.crt'
      xpack.security.transport.ssl.certificate_authorities: 'certs/ca/ca.crt'
      #https://www.elastic.co/guide/en/elasticsearch/reference/6.8/configuring-tls-docker.html
      ELASTIC_PASSWORD: $ELASTIC_PASSWORD
      xpack.security.transport.ssl.verification_mode: 'certificate'
      # https://discuss.elastic.co/t/http-client-did-not-trust-this-servers-certificate/109144
      xpack.ssl.certificate: 'certs/elasticsearch/elasticsearch.crt'
      xpack.ssl.key: 'certs/elasticsearch/elasticsearch.key'
      xpack.ssl.certificate_authorities: 'certs/ca/ca.crt'
     
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./esdata01:/usr/share/elasticsearch/data
      - './scripts/setup-users.sh:/usr/local/bin/setup-users.sh:ro'
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - docker_elk
    healthcheck:
      test: curl --cacert /usr/share/elasticsearch/config/certs/ca/ca.crt -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  es02:
    image: elasticsearch:${TAG}
    container_name: es02
    secrets:
      - source: ca.crt
        target: /usr/share/elasticsearch/config/certs/ca/ca.crt
      - source: es02.keystore
        target: /usr/share/elasticsearch/config/es02.keystore
      - source: es02.key
        target: /usr/share/elasticsearch/config/certs/es02/es02.key
      - source: es02.crt
        target: /usr/share/elasticsearch/config/certs/es02/es02.crt
    environment:
      cluster.name: 'elastic-cluster'
      node.name: 'es02'
      node.master: 'false'
      node.data: 'true'
      #node.attr.my_zone: 'europe'
      bootstrap.memory_lock: 'true'
      xpack.license.self_generated.type: 'trial'
      #Discovery
      #discovery.zen.ping.unicast.hosts: 'elasticsearch,es03'
      discovery.zen.ping.unicast.hosts: 'elasticsearch, es03'
      discovery.zen.ping_timeout: '30s'
      discovery.zen.minimum_master_nodes: '1'
      gateway.recover_after_data_nodes: '2'
      thread_pool.bulk.queue_size: '3000'
      indices.breaker.request.limit: '10%'
      search.default_search_timeout: '30s'
      indices.fielddata.cache.size:  '30%'

      ES_JAVA_OPTS: '-Xms512m -Xmx512m'
      xpack.security.enabled: 'true'
      xpack.monitoring.enabled: 'true'
      xpack.graph.enabled: 'true'
      xpack.watcher.enabled: 'true'
      xpack.monitoring.collection.enabled: 'true'
      #password set up
      network.host: '0.0.0.0'
      transport.host: '0.0.0.0'
      #xpack.security.enabled: 'true'
      xpack.security.http.ssl.enabled: 'true'
      xpack.security.http.ssl.verification_mode: 'certificate'
      xpack.security.http.ssl.key:  'certs/es02/es02.key'
      xpack.security.http.ssl.certificate: 'certs/es02/es02.crt'
      xpack.security.http.ssl.certificate_authorities: 'certs/ca/ca.crt'

      xpack.security.transport.ssl.enabled: 'true'
      xpack.security.transport.ssl.key:  'certs/es02/es02.key'
      xpack.security.transport.ssl.certificate: 'certs/es02/es02.crt'
      xpack.security.transport.ssl.certificate_authorities: 'certs/ca/ca.crt'
      #https://www.elastic.co/guide/en/elasticsearch/reference/6.8/configuring-tls-docker.html
      ELASTIC_PASSWORD: $ELASTIC_PASSWORD
      xpack.security.transport.ssl.verification_mode: 'certificate'
      # https://discuss.elastic.co/t/http-client-did-not-trust-this-servers-certificate/109144
      xpack.ssl.certificate: 'certs/es02/es02.crt'
      xpack.ssl.key: 'certs/es02/es02.key'
      xpack.ssl.certificate_authorities: 'certs/ca/ca.crt'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./esdata02:/usr/share/elasticsearch/data
      - './scripts/setup-users.sh:/usr/local/bin/setup-users.sh:ro'
    networks:
      - docker_elk


  es03:
    image: elasticsearch:${TAG}
    container_name: es03
    secrets:
      - source: ca.crt
        target: /usr/share/elasticsearch/config/certs/ca/ca.crt
      - source: es03.keystore
        target: /usr/share/elasticsearch/config/es03.keystore
      - source: es03.key
        target: /usr/share/elasticsearch/config/certs/es03/es03.key
      - source: es03.crt
        target: /usr/share/elasticsearch/config/certs/es03/es03.crt
    environment:
      cluster.name: 'elastic-cluster'
      node.name: 'es03'
      node.master: 'false'
      node.data: 'true'
      #node.attr.my_zone: 'asia'
      bootstrap.memory_lock: 'true'
      xpack.license.self_generated.type: 'trial'
      #Discovery
      #discovery.zen.ping.unicast.hosts: 'elasticsearch,es02'
      discovery.zen.ping.unicast.hosts: 'elasticsearch, es02'
      discovery.zen.ping_timeout: '30s'
      discovery.zen.minimum_master_nodes: '1'
      gateway.recover_after_data_nodes: '2'
      thread_pool.bulk.queue_size: '3000'
      indices.breaker.request.limit: '10%'
      search.default_search_timeout: '30s'
      indices.fielddata.cache.size:  '30%'

      ES_JAVA_OPTS: '-Xms512m -Xmx512m'
      xpack.security.enabled: 'true'
      xpack.monitoring.enabled: 'true'
      xpack.graph.enabled: 'true'
      xpack.watcher.enabled: 'true'
      xpack.monitoring.collection.enabled: 'true'
      #password set up
      network.host: '0.0.0.0'
      transport.host: '0.0.0.0'
      #xpack.security.enabled: 'true'
      xpack.security.http.ssl.enabled: 'true'
      xpack.security.http.ssl.verification_mode: 'certificate'
      xpack.security.http.ssl.key:  'certs/es03/es03.key'
      xpack.security.http.ssl.certificate: 'certs/es03/es03.crt'
      xpack.security.http.ssl.certificate_authorities: 'certs/ca/ca.crt'

      xpack.security.transport.ssl.enabled: 'true'
      xpack.security.transport.ssl.key:  'certs/es03/es03.key'
      xpack.security.transport.ssl.certificate: 'certs/es03/es03.crt'
      xpack.security.transport.ssl.certificate_authorities: 'certs/ca/ca.crt'
      #https://www.elastic.co/guide/en/elasticsearch/reference/6.8/configuring-tls-docker.html
      ELASTIC_PASSWORD: $ELASTIC_PASSWORD
      xpack.security.transport.ssl.verification_mode: 'certificate'
      # https://discuss.elastic.co/t/http-client-did-not-trust-this-servers-certificate/109144
      xpack.ssl.certificate: 'certs/es03/es03.crt'
      xpack.ssl.key: 'certs/es03/es03.key'
      xpack.ssl.certificate_authorities: 'certs/ca/ca.crt'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./esdata03:/usr/share/elasticsearch/data
      - './scripts/setup-users.sh:/usr/local/bin/setup-users.sh:ro'
    networks:
      - docker_elk

  
  logstash:
    image: logstash:${TAG}
    secrets:
      - source: logstash.conf
        target: /usr/share/logstash/pipeline/logstash.conf
      - source: logstash.yml
        target: /usr/share/logstash/config/logstash.yml
      - source: logstash.keystore
        target: /usr/share/logstash/config/logstash.keystore
      - source: ca.crt
        target: /usr/share/logstash/config/certs/ca/ca.crt
    # volumes:
    #   - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - 5044:5044
      - "12201:12201/udp"
    # environment:
    #   http.host: '0.0.0.0'
    #   pipeline.workers: '12'
    #   pipeline.batch.size: '30000'
    #   pipeline.batch.delay: '50'
    #   config.reload.automatic: 'true'
    #   config.reload.interval: '10s'
    #   #path.config: '/usr/share/logstash/pipeline'
    #   xpack.monitoring.enabled: 'true'
    #   #  xpack.monitoring.elasticsearch.username: "logstash_system"
    #   #  xpack.monitoring.elasticsearch.password: "xxxxxxxx"
    #   #  xpack.monitoring.elasticsearch.url: ["http://10.99.25.151:9200", "http://10.99.25.152:9200", "http://10.99.25.153:9200"]
    #   LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    #   #Password Set up
    #   # read password from logstash.keystore
    #   xpack.monitoring.elasticsearch.password: ${ELASTIC_PASSWORD}
    #   xpack.monitoring.elasticsearch.url: 'https://elasticsearch:9200'
    #   xpack.monitoring.elasticsearch.username: 'logstash_system'
    #   xpack.monitoring.elasticsearch.ssl.ca: '/usr/share/logstash/config/certs/ca/ca.crt'
      
    networks:
      - docker_elk
    depends_on:
        - elasticsearch
    healthcheck:
      test: bin/logstash -t
      interval: 60s
      timeout: 50s
      retries: 5

  # logstash2:
  #   image: logstash:${TAG}
  #   volumes:
  #     - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
  #   ports:
  #     - "5043:5043"
  #   environment:
  #       http.host: '0.0.0.0'
  #       pipeline.workers: '12'
  #       pipeline.batch.size: '30000'
  #       pipeline.batch.delay: '50'
  #       config.reload.automatic: 'true'
  #       config.reload.interval: '10s'
  #       #path.config: '/usr/share/logstash/pipeline'
  #       xpack.monitoring.enabled: 'true'
  #       #  xpack.monitoring.elasticsearch.username: "logstash_system"
  #       #  xpack.monitoring.elasticsearch.password: "xxxxxxxx"
  #       #  xpack.monitoring.elasticsearch.url: ["http://10.99.25.151:9200", "http://10.99.25.152:9200", "http://10.99.25.153:9200"]
  #       LS_JAVA_OPTS: "-Xmx256m -Xms256m"
  #   networks:
  #     - docker_elk
  #   depends_on:
  #     - elasticsearch
  
  kibana:
    image: kibana:${TAG}
    secrets:
      - source: kibana.yml
        target: /usr/share/kibana/config/kibana.yml
      - source: kibana.keystore
        target: /usr/share/kibana/data/kibana.keystore
      - source: ca.crt
        target: /usr/share/kibana/config/certs/ca/ca.crt
      - source: kibana.key
        target: /usr/share/kibana/config/certs/kibana/kibana.key
      - source: kibana.crt
        target: /usr/share/kibana/config/certs/kibana/kibana.crt
    # environment:
    #   server.host: '0.0.0.0'
    #   server.name: 'kibana'
    #   ELASTICSEARCH_URL: 'https://elasticsearch:9200'
    #   #
    #   # elasticsearch.username: "elastic"
    #   # elasticsearch.password: "xxxxxxxx"
    #   # elasticsearch.requestTimeout: 25000
    #   # pid.file: /var/run/kibana/kibana.pid
    #   #
    #   #xpack.security.enabled: 'false'
    #   xpack.monitoring.enabled: 'true'
    #   xpack.monitoring.kibana.collection.enabled: 'true'
    #   xpack.graph.enabled: 'true'
    #   xpack.reporting.enabled: 'true'
    #   xpack.reporting.encryptionKey: ${ELASTIC_PASSWORD}
    #   xpack.reporting.kibanaServer.hostname: 'kibana'
    #   # #Password Set up
    #   # elasticsearch.username: 'kibana'
    #   # elasticsearch.ssl.certificateAuthorities: 'certs/ca/ca.crt'
    #   # server.ssl.enabled: 'false'
    #   # xpack.monitoring.ui.container.elasticsearch.enabled: 'true'
    #   # #https://discuss.elastic.co/t/http-client-did-not-trust-this-servers-certificate/109144
    #   # #server.ssl.certificate: 'certs/kibana/kibana.crt'
    #   # #server.ssl.key: 'certs/kibana/kibana.key'
    #   # #elasticsearch.ssl.certificateAuthorities: 'certs/ca/ca.crt'
    ports:
      - 5601:5601
    networks:
      - docker_elk
    depends_on:
      - elasticsearch
    healthcheck:
      test: curl --cacert /usr/share/elasticsearch/config/certs/ca/ca.crt -s https://localhost:5601 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  docker_elk:


secrets:
  ca.crt:
    file: ./config/ssl/ca/ca.crt
  logstash.keystore:
    file: ./config/logstash/logstash.keystore
  logstash.conf:
    file: ./config/logstash/pipeline/logstash.conf
  logstash.yml:
    file: ./config/logstash/logstash.yml
  elasticsearch.keystore:
    file: ./config/elasticsearch/elasticsearch.keystore
  elasticsearch.key:
    file: ./config/elasticsearch/elasticsearch.key
  elasticsearch.crt:
    file: ./config/elasticsearch/elasticsearch.crt
  elasticsearch.p12:
    file: ./config/elasticsearch/elasticsearch.p12
  es02.keystore:
    file: ./config/es02/es02.keystore
  es02.key:
    file: ./config/es02/es02.key
  es02.crt:
    file: ./config/es02/es02.crt
  es03.keystore:
    file: ./config/es03/es03.keystore
  es03.key:
    file: ./config/es03/es03.key
  es03.crt:
    file: ./config/es03/es03.crt
  kibana.yml:
    file: ./config/kibana/kibana.yml
  kibana.keystore:
    file: ./config/kibana/kibana.keystore
  kibana.key:
    file: ./config/kibana/kibana.key
  kibana.crt:
    file: ./config/kibana/kibana.crt

